
export class Parser<T extends (string | number)> {

    
    constructor(formula: string, options?: Options);

    
    evaluate(context?: any): T;
}


export interface Options {

    
    readonly constants?: Record<string, any>;

    
    readonly tokenRx?: RegExp;

    
    readonly reference?: Options.Reference;

    
    readonly functions?: Record<string, Function>;
}


export namespace Options {

    type Reference = (name: string) => (context: any) => any;
}
