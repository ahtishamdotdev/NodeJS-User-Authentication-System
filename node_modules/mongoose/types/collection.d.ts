declare module 'mongoose' {
  import mongodb = require('mongodb');

  
  interface CollectionBase<T extends mongodb.Document> extends mongodb.Collection<T> {
    
    ensureIndex(...args: any[]): any;
    findAndModify(...args: any[]): any;
    getIndexes(...args: any[]): any;

    
    collectionName: string;
    
    conn: Connection;
    
    name: string;
  }

  export type BaseCollection<T extends mongodb.Document> = CollectionBase<T>;

  
  interface Collection<T extends mongodb.Document = mongodb.Document> extends CollectionBase<T> {
    
    
    new(name: string, conn: Connection, opts?: any): Collection<T>;
    
    $format(arg: any, color?: boolean, shell?: boolean): string;
    
    $print(name: string, i: string | number, args: any[], color?: boolean, shell?: boolean): void;
    
    getIndexes(): ReturnType<mongodb.Collection<T>['indexInformation']>;
  }
  let Collection: Collection;
}
