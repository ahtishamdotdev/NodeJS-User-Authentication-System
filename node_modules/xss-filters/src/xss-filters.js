


exports._getPrivFilters = function () {

    var LT     = /</g,
        QUOT   = /"/g,
        SQUOT  = /'/g,
        AMP    = /&/g,
        NULL   = /\x00/g,
        SPECIAL_ATTR_VALUE_UNQUOTED_CHARS = /(?:^$|[\x00\x09-\x0D "'`=<>])/g,
        SPECIAL_HTML_CHARS = /[&<>"'`]/g, 
        SPECIAL_COMMENT_CHARS = /(?:\x00|^-*!?>|--!?>|--?!?$|\]>|\]$)/g;

    
    
    
    var SENSITIVE_HTML_ENTITIES = /&(?:#([xX][0-9A-Fa-f]+|\d+);?|(Tab|NewLine|colon|semi|lpar|rpar|apos|sol|comma|excl|ast|midast|ensp|emsp|thinsp);|(nbsp|amp|AMP|lt|LT|gt|GT|quot|QUOT);?)/g,
        SENSITIVE_NAMED_REF_MAP = {Tab: '\t', NewLine: '\n', colon: ':', semi: ';', lpar: '(', rpar: ')', apos: '\'', sol: '/', comma: ',', excl: '!', ast: '*', midast: '*', ensp: '\u2002', emsp: '\u2003', thinsp: '\u2009', nbsp: '\xA0', amp: '&', lt: '<', gt: '>', quot: '"', QUOT: '"'};

    
    
    
    
    
    
    
    var CSS_VALID_VALUE = /^(?:(?!-*expression)#?[-\w]+|[+-]?(?:\d+|\d*\.\d+)(?:r?em|ex|ch|cm|mm|in|px|pt|pc|%|vh|vw|vmin|vmax)?|!important|)$/i,
        
        
        CSS_DOUBLE_QUOTED_CHARS = /[\x00-\x1F\x7F\[\]{}\\"]/g,
        CSS_SINGLE_QUOTED_CHARS = /[\x00-\x1F\x7F\[\]{}\\']/g,
        
        
        CSS_BLACKLIST = /url[\(\u207D\u208D]+/g,
        
        CSS_UNQUOTED_URL = /['\(\)]/g; 

    
    
    var URL_IPV6 = /\/\/%5[Bb]([A-Fa-f0-9:]+)%5[Dd]/;


    
    
    
    
    
    
    var URI_BLACKLIST_PROTOCOLS = {'javascript':1, 'data':1, 'vbscript':1, 'mhtml':1, 'x-schema':1},
        URI_PROTOCOL_COLON = /(?::|&#[xX]0*3[aA];?|&#0*58;?|&colon;)/,
        URI_PROTOCOL_WHITESPACES = /(?:^[\x00-\x20]+|[\t\n\r\x00]+)/g,
        URI_PROTOCOL_NAMED_REF_MAP = {Tab: '\t', NewLine: '\n'};

    var x, 
        strReplace = function (s, regexp, callback) {
            return s === undefined ? 'undefined'
                    : s === null            ? 'null'
                    : s.toString().replace(regexp, callback);
        },
        fromCodePoint = String.fromCodePoint || function(codePoint) {
            if (arguments.length === 0) {
                return '';
            }
            if (codePoint <= 0xFFFF) { 
                return String.fromCharCode(codePoint);
            }

            
            
            codePoint -= 0x10000;
            return String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint % 0x400) + 0xDC00);
        };


    function getProtocol(str) {
        var s = str.split(URI_PROTOCOL_COLON, 2);
        
        return (s[0] && (s.length === 2 || str.length !== s[0].length)) ? s[0] : null;
    }

    function htmlDecode(s, namedRefMap, reNamedRef, skipReplacement) {
        
        namedRefMap = namedRefMap || SENSITIVE_NAMED_REF_MAP;
        reNamedRef = reNamedRef || SENSITIVE_HTML_ENTITIES;

        function regExpFunction(m, num, named, named1) {
            if (num) {
                num = Number(num[0] <= '9' ? num : '0' + num);
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                

                return skipReplacement ? fromCodePoint(num)
                        : num === 0x80 ? '\u20AC'  
                        : num === 0x82 ? '\u201A'  
                        : num === 0x83 ? '\u0192'  
                        : num === 0x84 ? '\u201E'  
                        : num === 0x85 ? '\u2026'  
                        : num === 0x86 ? '\u2020'  
                        : num === 0x87 ? '\u2021'  
                        : num === 0x88 ? '\u02C6'  
                        : num === 0x89 ? '\u2030'  
                        : num === 0x8A ? '\u0160'  
                        : num === 0x8B ? '\u2039'  
                        : num === 0x8C ? '\u0152'  
                        : num === 0x8E ? '\u017D'  
                        : num === 0x91 ? '\u2018'  
                        : num === 0x92 ? '\u2019'  
                        : num === 0x93 ? '\u201C'  
                        : num === 0x94 ? '\u201D'  
                        : num === 0x95 ? '\u2022'  
                        : num === 0x96 ? '\u2013'  
                        : num === 0x97 ? '\u2014'  
                        : num === 0x98 ? '\u02DC'  
                        : num === 0x99 ? '\u2122'  
                        : num === 0x9A ? '\u0161'  
                        : num === 0x9B ? '\u203A'  
                        : num === 0x9C ? '\u0153'  
                        : num === 0x9E ? '\u017E'  
                        : num === 0x9F ? '\u0178'  
                        : (num >= 0xD800 && num <= 0xDFFF) || num === 0x0D ? '\uFFFD'
                        : x.frCoPt(num);
            }
            return namedRefMap[named || named1] || m;
        }

        return s === undefined  ? 'undefined'
            : s === null        ? 'null'
            : s.toString().replace(NULL, '\uFFFD').replace(reNamedRef, regExpFunction);
    }

    function cssEncode(chr) {
        
        return '\\' + chr.charCodeAt(0).toString(16).toLowerCase() + ' ';
    }
    function cssBlacklist(s) {
        return s.replace(CSS_BLACKLIST, function(m){ return '-x-' + m; });
    }
    function cssUrl(s) {
        
        s = x.yufull(htmlDecode(s));
        var protocol = getProtocol(s);

        
        
        return (protocol && URI_BLACKLIST_PROTOCOLS[protocol.toLowerCase()]) ? '##' + s : s;
    }

    return (x = {
        
        frCoPt: function(num) {
            return num === undefined || num === null ? '' :
                !isFinite(num = Number(num)) || 
                num <= 0 ||                     
                num > 0x10FFFF ||               
                

                (num >= 0x01 && num <= 0x08) ||
                (num >= 0x0E && num <= 0x1F) ||
                (num >= 0x7F && num <= 0x9F) ||
                (num >= 0xFDD0 && num <= 0xFDEF) ||
                
                 num === 0x0B || 
                (num & 0xFFFF) === 0xFFFF || 
                (num & 0xFFFF) === 0xFFFE ? '\uFFFD' : fromCodePoint(num);
        },
        d: htmlDecode,
        
        yup: function(s) {
            s = getProtocol(s.replace(NULL, ''));
            
            return s ? htmlDecode(s, URI_PROTOCOL_NAMED_REF_MAP, null, true).replace(URI_PROTOCOL_WHITESPACES, '').toLowerCase() : null;
        },

        
        y: function(s) {
            return strReplace(s, SPECIAL_HTML_CHARS, function (m) {
                return m === '&' ? '&amp;'
                    :  m === '<' ? '&lt;'
                    :  m === '>' ? '&gt;'
                    :  m === '"' ? '&quot;'
                    :  m === "'" ? '&#39;'
                    :   '&#96;';       
            });
        },

        
        ya: function(s) {
            return strReplace(s, AMP, '&amp;');
        },

        
        
        yd: function (s) {
            return strReplace(s, LT, '&lt;');
        },

        
        
        
        
        
        
        
        
        
        
        
        
        yc: function (s) {
            return strReplace(s, SPECIAL_COMMENT_CHARS, function(m){
                return m === '\x00' ? '\uFFFD'
                    : m === '--!' || m === '--' || m === '-' || m === ']' ? m + ' '
                    : m.slice(0, -1) + ' >';
            });
        },

        
        
        yavd: function (s) {
            return strReplace(s, QUOT, '&quot;');
        },

        
        
        yavs: function (s) {
            return strReplace(s, SQUOT, '&#39;');
        },

        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        yavu: function (s) {
            return strReplace(s, SPECIAL_ATTR_VALUE_UNQUOTED_CHARS, function (m) {
                return m === '\t'   ? '&#9;'  
                    :  m === '\n'   ? '&#10;' 
                    :  m === '\x0B' ? '&#11;' 
                    :  m === '\f'   ? '&#12;' 
                    :  m === '\r'   ? '&#13;' 
                    :  m === ' '    ? '&#32;' 
                    :  m === '='    ? '&#61;' 
                    :  m === '<'    ? '&lt;'
                    :  m === '>'    ? '&gt;'
                    :  m === '"'    ? '&quot;'
                    :  m === "'"    ? '&#39;'
                    :  m === '`'    ? '&#96;'
                    :  '\uFFFD';
            });
        },

        yu: encodeURI,
        yuc: encodeURIComponent,

        
        
        yubl: function (s) {
            return URI_BLACKLIST_PROTOCOLS[x.yup(s)] ? 'x-' + s : s;
        },

        
        
        yufull: function (s) {
            return x.yu(s).replace(URL_IPV6, function(m, p) {
                return '
            });
        },

        
        yublf: function (s) {
            return x.yubl(x.yufull(s));
        },

        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        

        yceu: function(s) {
            s = htmlDecode(s);
            return CSS_VALID_VALUE.test(s) ? s : ";-x:'" + cssBlacklist(s.replace(CSS_SINGLE_QUOTED_CHARS, cssEncode)) + "';-v:";
        },

        
        yced: function(s) {
            return cssBlacklist(htmlDecode(s).replace(CSS_DOUBLE_QUOTED_CHARS, cssEncode));
        },

        
        yces: function(s) {
            return cssBlacklist(htmlDecode(s).replace(CSS_SINGLE_QUOTED_CHARS, cssEncode));
        },

        
        
        
        
        
        yceuu: function(s) {
            return cssUrl(s).replace(CSS_UNQUOTED_URL, function (chr) {
                return  chr === '\''        ? '\\27 ' :
                        chr === '('         ? '%28' :
                           '%29';
            });
        },

        
        yceud: function(s) { 
            return cssUrl(s);
        },

        
        yceus: function(s) { 
            return cssUrl(s).replace(SQUOT, '\\27 ');
        }
    });
};



var privFilters = exports._privFilters = exports._getPrivFilters();








function uriInAttr (s, yav, yu) {
    return privFilters.yubl(yav((yu || privFilters.yufull)(s)));
}




exports.inHTMLData = privFilters.yd;


exports.inHTMLComment = privFilters.yc;


exports.inSingleQuotedAttr = privFilters.yavs;


exports.inDoubleQuotedAttr = privFilters.yavd;


exports.inUnQuotedAttr = privFilters.yavu;



exports.uriInSingleQuotedAttr = function (s) {
    return uriInAttr(s, privFilters.yavs);
};


exports.uriInDoubleQuotedAttr = function (s) {
    return uriInAttr(s, privFilters.yavd);
};



exports.uriInUnQuotedAttr = function (s) {
    return uriInAttr(s, privFilters.yavu);
};


exports.uriInHTMLData = privFilters.yufull;



exports.uriInHTMLComment = function (s) {
    return privFilters.yc(privFilters.yufull(s));
};





exports.uriPathInSingleQuotedAttr = function (s) {
    return uriInAttr(s, privFilters.yavs, privFilters.yu);
};


exports.uriPathInDoubleQuotedAttr = function (s) {
    return uriInAttr(s, privFilters.yavd, privFilters.yu);
};



exports.uriPathInUnQuotedAttr = function (s) {
    return uriInAttr(s, privFilters.yavu, privFilters.yu);
};


exports.uriPathInHTMLData = privFilters.yu;



exports.uriPathInHTMLComment = function (s) {
    return privFilters.yc(privFilters.yu(s));
};



exports.uriQueryInSingleQuotedAttr = exports.uriPathInSingleQuotedAttr;


exports.uriQueryInDoubleQuotedAttr = exports.uriPathInDoubleQuotedAttr;


exports.uriQueryInUnQuotedAttr = exports.uriPathInUnQuotedAttr;


exports.uriQueryInHTMLData = exports.uriPathInHTMLData;


exports.uriQueryInHTMLComment = exports.uriPathInHTMLComment;




exports.uriComponentInSingleQuotedAttr = function (s) {
    return privFilters.yavs(privFilters.yuc(s));
};


exports.uriComponentInDoubleQuotedAttr = function (s) {
    return privFilters.yavd(privFilters.yuc(s));
};



exports.uriComponentInUnQuotedAttr = function (s) {
    return privFilters.yavu(privFilters.yuc(s));
};


exports.uriComponentInHTMLData = privFilters.yuc;



exports.uriComponentInHTMLComment = function (s) {
    return privFilters.yc(privFilters.yuc(s));
};








exports.uriFragmentInSingleQuotedAttr = function (s) {
    return privFilters.yubl(privFilters.yavs(privFilters.yuc(s)));
};







exports.uriFragmentInDoubleQuotedAttr = function (s) {
    return privFilters.yubl(privFilters.yavd(privFilters.yuc(s)));
};







exports.uriFragmentInUnQuotedAttr = function (s) {
    return privFilters.yubl(privFilters.yavu(privFilters.yuc(s)));
};



exports.uriFragmentInHTMLData = exports.uriComponentInHTMLData;


exports.uriFragmentInHTMLComment = exports.uriComponentInHTMLComment;
