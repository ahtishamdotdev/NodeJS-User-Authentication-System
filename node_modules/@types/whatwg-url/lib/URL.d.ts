import { URL } from "../index";
import { implementation as URLImpl } from "./URL-impl";


export function is(obj: unknown): obj is URL;


export function isImpl(obj: unknown): obj is URLImpl;


export function convert(globalObject: object, obj: unknown, { context }?: { context: string }): URLImpl;


export function create(globalObject: object, constructorArgs: readonly [url: string, base?: string]): URL;


export function createImpl(globalObject: object, constructorArgs: readonly [url: string, base?: string]): URLImpl;


export function setup<T extends URL>(
    obj: T,
    globalObject: object,
    constructorArgs: readonly [url: string, base?: string],
): T;


declare function _new(globalObject: object, newTarget?: new(url: string, base?: string) => URL): URLImpl;
export { _new as new };


export function install(globalObject: object, globalNames: readonly string[]): void;
